OPTIMIZATION
* We should be able to import abstract_model and helpers the same way.
* We're currently running a 1.1.1 project in a 1.2 environment. We should upgrade the project soon. We would be able to use the csrf and messages framework.
* Fix page controls and searches.
* Use session_expiry.
* Use user.has_perms() or user.groups() to set backend staff permissions in ModelAdmin queryset().
* Do we need **kwargs in functions with h.json_response as helper?
* As a temporary alternative to bulk products upload, we might use formsets to enable merchants upload more than one product at a time.
* Store Search.
* Disable checkout link if there're no items in shopping cart.
* Set last_modified column when product changes.
* Implement shopping cart history feature.
* account_name usage in store url is OK for now, when we devise a better store url, e.g. http://amazemobiles.pay4memall.com/, we can start using slugs.
* Don't forget; we can pass some extra argument to a view through a urlpattern.
* Make ShoppingCartEditForm.quantity a select field based on stock amount.
* Validate account_name field to allow upper and lower cased alphabets, - and _.
* Implement SlugField in mall Category, store ProductGroup, Product and ProductDetail models.
* What do we do when a buyer has insufficient balance in his ewallet or bank and he is not allowed to pay? Issue:
- We've already created an order and deducted the quantity demanded from the stock quantity.
* Unit Testing (models/views)**.


Before We Launch - Beta
=======================
BUGS
* Urls cleanup, Production payment response url should be /payment/response/.
* Use backend validation (strictly) for all form fields.
* Plugin email and sms functionality.
* Let's not use ajax for now.

- Remove "Save" bar and change "Change Order" to "View Order" on order change form.

URGENT
======
* User notification on add_to_cart().
* Email delivery guys on completion of a transaction.
* Split registration form into sub-units e.g. Personal Details, Login Details, e.t.c.
* Bulk products upload.

FEATURES
* Include a cron job file that runs './manage.py update_index' periodically.
* Delivery to be handled by NIPOST, let's have email functionality for that, per transaction.

New urls structure
==================
mall
/cart/
/cart/update/
/cart/delete/
/cart/details/

store
/{{ store_name }}/
/{{ store_name }}/products/{{ product_name }}/
/{{ store_name }}/browse/{{ product_group_name }}/

account
/account/
/account/register/
/account/login/
/account/logout/

payment
/payment/
/payment/response/

order
/order/checkout/
/order/delivery/
